
' Styles
hide empty members
hide empty methods
' End Styles


' Functions definition
    !function isTablePrimary($arg)
        !$stringLength = %strlen($arg)
        !$positionCroch = %strpos($arg, "[")

        !$typePrimary = %false()
        !if ($positionCroch >= 0)
            !$arg = %substr($arg, 0, $positionCroch)

            !$typePrimary = _isPrimary($arg)
        !endif

        !return $typePrimary
        

    !endfunction

    !function isPrimary($arg)
        !return _isPrimary($arg) || isTablePrimary($arg)
    !endfunction

    !function _isPrimary($arg)

        !$contain = %false()

        !if ($arg == "int")
            !$contain = %true()

        !elseif ($arg == "float")
            !$contain = %true()

        !elseif ($arg == "void")
            !$contain = %true()

        !elseif ($arg == "double")
            !$contain = %true()

        !elseif ($arg == "boolean")
            !$contain = %true()

        ' !elseif ($arg == "String")
        '     !$contain = %true()

        !endif

        !return $contain

    !endfunction

    !function colorate($name, $color = "green")
        !return "<color:" + $color + ">" + $name + "</color>"
    !endfunction

    !function join($list, $color1 = "", $color2 = "")
        !$arguments = ""

        !foreach $argument in $list
            !if (%strlen($arguments) > 0)
                !$arguments = $arguments + ", "
            !endif

            !if (%not(isPrimary($argument)))
                !$color = $color2
            !else
                !$color = $color1
            !endif

            !$arguments = $arguments + colorate($argument, $color)
        !endfor

        !return $arguments

    !endfunction

    !function colorateType($type)
        !$stringLength = %strlen($type)
        !$positionChev = %strpos($type, "<")
        !$positionChevFermante = %strpos($type, ">")

        !if ($positionChev >= 0 && $positionChevFermante - 1 != $positionChev) 
            !$stringArguments = %substr($type, $positionChev + 1, $positionChevFermante - $positionChev - 1)

            !$type = %substr($type, 0, $positionChev)

            !if (isPrimary($type))
                !$colorOfType = "#d2453f"
            !else
                !$colorOfType = "#428ecd"

            !endif

            !$type = colorate($type, $colorOfType)

            !$type = $type + "<"

            !$arguments = join(%splitstr($stringArguments, ", "), "#d2453f", "#f69c3e")

            !$type = $type + $arguments + ">"
        !else

            !if (isPrimary($type))
                !$colorOfType = "#d2453f"
            !else
                !$colorOfType = "#428ecd"

            !endif
            !$type = colorate($type, $colorOfType)
        !endif

        !return $type

    !endfunction

    !function member($type, $name)
        !$stringLength = %strlen($name)
        !$positionPar = %strpos($name, "(")
        !$positionParFermante = %strpos($name, ")")

        !if ($positionPar >= 0 && $positionParFermante - 1 != $positionPar) 
            !$stringArguments = %substr($name, $positionPar + 1, $positionParFermante - $positionPar - 1)

            !$name = %substr($name, 0, $positionPar + 1)

            !$arguments = join(%splitstr($stringArguments, ", "), "#d2453f", "#428ecd")

            !$name = $name + $arguments + ")"
        !endif

        !if ($type == "void")
            !$memberColored = $name + " : " + colorate($type, "Green")

        !elseif ($type == "")
            !$memberColored = $name

        !else
            !$memberColored = $name + " : " + colorateType($type)

        !endif

        !return $memberColored
    !endfunction

    !function construct($name)
        !return member("", $name)
    !endfunction

    !function boolean($name)
        !return member(boolean, $name)
    !endfunction

    !function list($type, $name)
        !return member("List<" + $type + ">", $name)
    !endfunction

    !function int($name)
        !return member(int, $name)
    !endfunction

    !function string($name)
        !return member(String, $name)
    !endfunction

    !function void($name)
        !return member(void, $name)
    !endfunction

    !function date($nom)
        !return member(Date, $nom)
    !endfunction

    !function float($nom)
        !return member(float, $nom)
    !endfunction

    !function double($nom)
        !return member(double, $nom)
    !endfunction

    !function table($type, $nom, $size = "")
        !return member($type + "[" + $size + "]", $nom)
    !endfunction

    !function point($n1, $n2, $sign)
        !return $n1 + $sign + $n2
        
    !endfunction

    !function extends($child, $parent, $dir = false)
    
        !if ($dir == false)
            !$response = point($child, $parent, "--|>")
        !else
            !$response = point($child, $parent, "-" + $dir + "-|>")
        !endif

        !return $response
    !endfunction
